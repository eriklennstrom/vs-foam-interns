@use "sass:color";
@use "@/styles/colors.scss";
@use "@/styles/variables.scss";

* {
  margin: 0;
}

.numbers-input__div {
  width: fit-content;
  display: flex;
  flex-direction: column;

  
  .topWrapper {
    margin-top: 10px;
    align-items: flex-start;

    h2 {
      display: flex;
      font-family: variables.$primaryFontFamily;
      font-weight: 400;
      align-items: flex-start;
      font-size: 21px;
      color: map-get(colors.$input-text-colors, light);
      user-select: none;

    }
  }



  .inputWrapper {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 2px;
    border: 1px solid map-get(colors.$input-colors, light);
    border-radius: 8px;
    position: relative;
    border: none;

    &.verticalStyle{

     
    }
    
    input {
      text-align: center;
    }
  }

  .vertical__incrementDiv {}

  .vertical__decrementDiv {}

}



.horizontal {
  display: flex;
  flex-direction: column;
}



.verticalStyle {
  border: none;
  justify-content: center;
  align-items: center;
}

.dark .inputWrapper {
  border-color: map-get(colors.$dark-input-colors, light);
}

.indicator {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  font-weight: 900;
  gap:2px;
}


.horizontal__incrementDiv {
  height: 40px;

}

.horizontal__decrementDiv {

  height: 40px;
}

.valid {
  border-color: map-get(colors.$input-colors, success);
  user-select: none;

  svg {
    color: map-get(colors.$input-colors, success);
  }
}

.dark .valid {
  border-color: map-get(colors.$dark-input-colors, success);
  user-select: none;

  svg {
    color: map-get(colors.$dark-input-colors, success);
  }
}


.invalid {
  user-select: none;
  border-color: map-get(colors.$input-colors, danger);

  svg {
    color: map-get(colors.$input-colors, danger);
  }
}

.dark .invalid {
  user-select: none;
  border-color: map-get(colors.$dark-input-colors, danger);

  svg {
    color: map-get(colors.$dark-input-colors, danger);
  }
}

.userInstructions {
  user-select: none;
  font-size: 12px;
  padding: 1px;
  margin-right: 10px;
  
  .warningIcon {
    padding: 0 4px 0 0;
  }

  .successIcon {
    padding: 0 4px 0 0;
    user-select: none;
  }

  .successMessageText {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    color: map-get(colors.$input-text-colors, success);
  }

  .errorMessageText {
    color: map-get(colors.$input-text-colors, danger);
  }

  .helperMessageText {
    opacity: 0.5;
  }
}

.dark .userInstructions {
  .helperMessageText {
    color: rgba(255, 251, 245, 0.958);
  }
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}


input {
  border: 0;
  outline: 0;
  background: transparent;
  font-size: 1rem;
  padding: 8px;
}



.disabled {
  opacity: 0.3;
  pointer-events: none;
  text-decoration: none;
}

//  background-color: map-get(colors.$dark-disabled, $name);
//  outline-color: map-get(colors.$disabled-text-colors, $name);
//  color: map-get(colors.$disabled-text-colors, $name);
//  text-decoration: none;