@use "sass:color";
@use "@/styles/colors.scss";
@use "@/styles/variables.scss";
@use "@/styles/font-system.scss";

* {
  margin: 0;
}
.input-body {
  display: flex;
  flex-direction: column;
  align-self: flex-start;
  justify-self: flex-start;
  .input-body__top-wrapper {
    margin-top: 10px;

    label {
      display: flex;
      font-family: variables.$primaryFontFamily;
      font-weight: 400;
      color: map-get(colors.$input-text-colors, light);
      user-select: none;

      svg {
        color: white;
        background-color: transparent;
      }
    }
    .icon-wrapper {
      margin-left: 10px;
      align-self: center;
      background-color: map-get(colors.$input-colors, light);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 14px;
      width: 14px;

      .dropdown {
        transition: all 0.15s ease-in-out;
        rotate: 180deg;
        height: 14px;
        width: 14px;
        align-self: center;
        justify-self: center;
      }
      .accordion__toggled {
        transform: rotate(180deg);
        transition: transform;
        overflow: hidden;
      }
    }

    .slot-enter-active,
    .slot-leave-active {
      will-change: height, opacity;
      transition: height 0.25s ease, opacity 0.25s ease;
      overflow: hidden;
    }

    .slot-enter,
    .slot-leave-to {
      height: 0 !important;
      opacity: 0;
    }
  }

  .input__wrapper {
    width: fit-content;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2px;
    border: 1px solid map-get(colors.$input-colors, light);
    border-radius: 8px;
    width: 100%;

    input::placeholder {
      opacity: 0.3;
    }
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    .slot-enter-active,
    .slot-leave-active {
      will-change: height, opacity;
      transition: height 0.25s ease, opacity 0.25s ease;
      overflow: hidden;
    }

    .slot-enter,
    .slot-leave-to {
      height: 0 !important;
      opacity: 0;
    }

    .slot-enter-active,
    .slot-leave-active {
      will-change: height, opacity;
      transition: height 0.25s ease, opacity 0.25s ease;
      overflow: hidden;
    }

    .slot-enter,
    .slot-leave-to {
      height: 0 !important;
      opacity: 0;
    }
  }

  .input__wrapper {
    input::placeholder {
      opacity: 0.3;
    }
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    input[type="number"] {
      appearance: inherit;
      -moz-appearance: textfield;
    }

    input {
      width: 100%;
      border: 0;
      outline: 0;
      background: transparent;
      padding: 10px;
    }
  }

  .warning-icon {
    margin-right: 10px;
    user-select: none;
  }

  .success-icon {
    margin-right: 10px;
    user-select: none;
  }
  .password-controls {
    margin-right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &.valid {
    border-color: map-get(colors.$input-colors, success);
    user-select: none;
    svg {
      color: map-get(colors.$input-colors, success);
    }
  }

  &.invalid {
    user-select: none;
    border-color: map-get(colors.$input-colors, danger);
    svg {
      color: map-get(colors.$input-colors, danger);
    }
  }
}
.dark .input__wrapper {
  border-color: map-get(colors.$dark-input-colors, light);

  input {
    color: map-get(colors.$text-colors, light-dark);
  }
  &.valid {
    border-color: map-get(colors.$dark-input-colors, success);
    user-select: none;
  }
  &.invalid {
    user-select: none;
    border-color: map-get(colors.$input-colors, danger);
  }
  .password-controls{
    svg{
      color: map-get(colors.$dark-input-colors, light);
    }
  }
}

.user-instructions {
  padding: 1px;
  margin-right: 10px;
  max-width: 100%;
  word-wrap: break-word;

  .success-message-text {
    color: map-get(colors.$input-text-colors, success);
  }

  .error-message-text {
    color: map-get(colors.$input-text-colors, danger);
  }

  .helper-message-text {
    opacity: 0.5;
  }
}

.dark .user-instructions {
  .helper-message-text {
    color: rgba(255, 251, 245, 0.958);
  }
}

/// Universal rules:

.disabled {
  opacity: 0.3;
  pointer-events: none;
  text-decoration: none;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.sm {
  input {
    font-size: map-get(font-system.$font-size, small);
    padding: 4px 10px;
  }
}

.md {
  input {
    font-size: map-get(font-system.$font-size, body1);
    padding: 8px 10px;
  }
}

.lg {
  input {
    font-size: map-get(font-system.$font-size, h5);
  }
}

.sent-content {
  padding-bottom: 0.5rem;
}
