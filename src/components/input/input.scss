@use "sass:color";
@use "@/styles/colors.scss";
@use "@/styles/variables.scss";


* {
  margin: 0;
}

.topWrapper {
  margin-top: 10px;
  h2 {
    display: flex;
    font-family: variables.$primaryFontFamily;
    font-weight: 400;
    font-size: 21px;
    color: map-get(colors.$input-text-colors, light);
    user-select: none;

    svg {
      color: white;
      background-color: transparent;
    }
  }

  .iconWrapper {
    margin-left: 10px;
    align-self: center;
    background-color: map-get(colors.$input-colors, light);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 14px;
    width: 14px;

    .dropdown {
      transition: all 0.15s ease-in-out;
      rotate: 180deg;
      height: 14px;
      width: 14px;
      align-self: center;
      justify-self: center;
    }
    .toggledAccordian {
      transform: rotate(180deg);
      transition: transform;
      overflow: hidden;
    }
  }

  .slot-enter-active,
  .slot-leave-active {
    will-change: height, opacity;
    transition: height 0.25s ease, opacity 0.25s ease;
    overflow: hidden;
  }

  .slot-enter,
  .slot-leave-to {
    height: 0 !important;
    opacity: 0;
  }
}




.inputWrapper {

  width: fit-content;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2px;
  border: 1px solid map-get(colors.$input-colors, light);
  border-radius: 8px;
  width: 100%;

  input::placeholder {
    opacity: 0.3;
  }
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  input[type="number"] {
    appearance:inherit;
    -moz-appearance: textfield;
  }
  
  input {
    width: 100%;
    border: 0;
    outline: 0;
    background: transparent;
    font-size: 1rem;
    padding: 10px;
  }
}

  .warningIcon {
    padding-right: 10px;
    user-select: none;
  }

  .successIcon {
    padding-right: 10px;
    margin: 0 auto;
    user-select: none;
  }
  .passwordControls {
    padding-right: 10px;
    width: 25px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &.valid {
    border-color: map-get(colors.$input-colors, success);
    user-select: none;
    svg {
      color: map-get(colors.$input-colors, success);
    }
  }
  
  &.invalid {
    user-select: none;
    border-color: map-get(colors.$input-colors, danger);
    svg {
      color: map-get(colors.$input-colors, danger);
    }
  
}

.dark .inputWrapper {
  border-color: map-get(colors.$dark-input-colors, light);
  input {
    color: map-get(colors.$text-colors, light-dark);
  }
   &.valid {
    border-color: map-get(colors.$dark-input-colors, success);
    user-select: none;
    svg {
      color: map-get(colors.$dark-input-colors, success);
    }
  }
  &.invalid {
    user-select: none;
    border-color: map-get(colors.$input-colors, danger);
    svg {
      color: map-get(colors.$input-colors, danger);
    }
  }
}

.userInstructions {
  user-select: none;
  font-size: 12px;
  padding: 1px;
  margin-right: 10px;
  max-width: 100%;
  word-wrap: break-word;

  .successMessageText {
    color: map-get(colors.$input-text-colors, success);
  }

  .errorMessageText {
    color: map-get(colors.$input-text-colors, danger);
  }

  .helperMessageText {
    opacity: 0.5;
  }
}

.dark .userInstructions {
  .helperMessageText {
    color: rgba(255, 251, 245, 0.958);
  }
}


/// Universal rules:

.disabled {
  opacity: 0.3;
  pointer-events: none;
  text-decoration: none;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.sm {
  input {
    font-size: 0.9rem;
    padding: 4px 10px;
  }
}

.md {
  input {
    font-size: 1rem;
    padding: 8px 10px;
  }
}

.lg {
  input {
    font-size: 1.1rem;
  }
}


