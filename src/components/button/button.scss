@use "sass:color";
@use "@/styles/colors.scss";
@use "@/styles/variables.scss";

@each $name, $bg in colors.$button-bg-colors {
  .button--#{$name} {
    all: unset;
    cursor: pointer;
    @if (str-index($name, "secondary")) {
      color: map-get(colors.$text-colors, strong-dark);
    } @else if (str-index($name, "ghost")) {
      color: map-get(colors.$text-colors, strong-dark);
    } @else {
      color: map-get(colors.$text-colors, strong-light);
    }
    font-family: variables.$primaryFontFamily;
    width: fit-content;
    padding: 8px 16px;
    background-color: $bg;
    border-radius: 10px;
    font-size: 12px;
    transition: all 0.3s;
    &:focus {
      outline-style:solid;
      outline-width: 1px;
      outline-offset: -3px;
      outline-color:  map-get(colors.$button-border-colors, $name) ;
    }

    &:hover {
      background-color: map-get(colors.$button-hover-colors, $name) ;
    }

    &:has(svg) {
      display: flex;
      align-items: center;
      gap:8px;
      svg {
        color: inherit;
        transition: all 0.4s ease-in-out;
        
      }
    }
    text {
      pointer-events: none;
      user-select: none ;
    }

    

  }

  .button--#{$name}__outline {
    @if (str-index($name, "secondary")) {
      color: map-get(colors.$text-colors, light-light);
    } @else {
      color: $bg;
    }
    border: 1px solid $bg;
    background-color: color.adjust($bg, $alpha: -0.9);
    &:has(svg) {
      svg {
        color: inherit;
        padding: 0 8px;
        transition: all 0.4s ease-in-out;
      }
    }
  }
}

.active {
  transform: rotate(-180deg); 
}
